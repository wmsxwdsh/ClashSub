# 配置名称: Surge 自用配置
# 配置作者: wmsxwdsh
# 适用版本：iOS/macOS 通用
# 更新时间: 2025-07-20

# 官方手册 - https://manual.nssurge.com/
# 理解原理 - https://manual.nssurge.com/book/understanding-surge/cn/
# 帮助中心 - https://nssurge.zendesk.com/
# 技术社区 - https://community.nssurge.com

[General]
# > Internet 测试 URL
internet-test-url = http://www.taobao.com
# internet-test-url = http://www.bing.com
# internet-test-url = http://www.baidu.com
# internet-test-url = http://connect.rom.miui.com/generate_204
# internet-test-url = http://www.apple.com/library/test/success.html

# > 代理测速 URL
proxy-test-url = http://cp.cloudflare.com/generate_204
# proxy-test-url = http://www.gstatic.com/generate_204
# proxy-test-url = https://translate.google.cn/generate_204
# proxy-test-url = http://1.1.1.1

# > 测试超时（秒）
test-timeout = 2

# > WiFi 助理
#（在 Wi-Fi 网络不佳时尝试使用数据网络建立连接，请仅当使用不限量的数据流量时开启）
wifi-assist = false

# > All Hybrid 网络并发
# > 开启后，等同于对所有策略设置 hybrid = true，所有 TCP 连接在建立时均会并发尝试数据网络和 WiFi 连接。
# > 除此之外，所有 DNS 查询操作也都将并发在数据网络和 WiFi 上进行。所以若想体验该功能，请手动配置公网 DNS，暂不支持 DOH。
all-hybrid = false

# UDP 优先级
udp-priority = false

# > GeoIP 数据库
geoip-maxmind-url = https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb
# geoip-maxmind-url = https://github.com/Hackl0us/GeoIP2-CN/raw/release/Country.mmdb

# > 是否启动完整的 IPv6 支持 (默认值: false)
#（如无特殊需求不应开启 IPv6，目前网络环境下 IPv6 只会带来问题。）
ipv6 = false
# > Surge VIF IPv6 Stack
# > 允许 IPv6 通过 Surge VIF，当希望 Surge 处理连接到 IPv6 地址的原始 TCP 连接时非常有用。
# > 可选项：true，false，auto，always
ipv6-vif = auto

# > 允许 Wi-Fi 访问 (仅 iOS，若允许远程访问将「false」改为「true」)
# > Surge 作为 HTTP/SOCKS5 代理服务器向 Wi-Fi 网络下的其他设备提供服务器
allow-wifi-access = false
# > Surge Mac 供外网访问的服务端口
wifi-access-http-port = 6152
# > SOCKS5 服务端口 (默认值: 6153)
wifi-access-socks5-port = 6153

# > Surge iOS 供外网访问的服务端口
http-listen = 127.0.0.1:6152
# > SOCKS5 服务端口 (默认值: 6153)
socks5-listen = 127.0.0.1:6153

# > 允许热点共享
allow-hotspot-access = false
# > 兼容性（仅 iOS 版可用）
compatibility-mode = 0

# > 跳过某个域名或者 IP 段，这些目标主机将不会由 Surge Proxy 处理。
# > (macOS 版本中，如果启用了 Set as System Proxy, 这些值会被写入到系统网络代理设置.)
skip-proxy = 192.168.0.0/24, 10.0.0.0/8, 172.16.0.0/12, 127.0.0.1, localhost, *.local, seed-sequoia.siri.apple.com, sequoia.siri.apple.com, sequoia.apple.com, passenger.t3go.cn, www.baidu.com, yunbusiness.ccb.com, wxh.wo.cn, gate.lagou.com, www.abchina.com.cn, www.shanbay.com, login-service.mobile-bank.psbc.com, mobile-bank.psbc.com
# > 排除简单主机名
exclude-simple-hostnames = true

# > 强制使用特定的 DNS 服务器
#（119 腾讯，180 字节跳动，223 阿里）
dns-server = 119.29.29.29, 180.184.1.1, 223.5.5.5, system
# > DNS 设置
# > 从 /etc/hosts 读取 DNS 记录
read-etc-hosts = true

# > 高级
# > 日志等级: warning, notify, info, verbose (默认值: notify)
loglevel = notify
# > 当遇到 REJECT 策略时返回错误页
show-error-page-for-reject = true

# > Always Real IP Hosts
# > 当 Surge VIF 处理 DNS 问题时，此选项要求 Surge 返回一个真正的 IP 地址，而不是一个假 IP 地址。
# > DNS 数据包将被转发到上游 DNS 服务器。
always-real-ip = *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.logon.battlenet.com.cn, *.logon.battle.net, stun.l.google.com

# > Hijack DNS
# > 默认情况下，Surge 只返回发送到 Surge DNS 地址的 DNS 查询的假 IP 地址(198.18.0.2)。
# > 有些设备或软件总是使用硬编码的 DNS 服务器。 (例如 Google Speakers 总是使用 8.8.8.8)。
# > 您可以使用此选项劫持查询，以获得一个假地址。
hijack-dns = *:53

# > VIF Excluded Routes
# > Surge VIF 只能处理 TCP 和 UDP 协议。使用此选项可以绕过特定的 IP 范围，允许所有流量通过。
; tun-excluded-routes = 239.255.255.250/32

# > 新增参数 udp-policy-not-supported-behaviour 参数用于控制当 UDP 流量被匹配到一个不支持 UDP 转发的策略时的行为
# > DIRECT：回退到 DIRECT 策略（默认）
# > REJECT：回退到 REJECT 策略
udp-policy-not-supported-behaviour = REJECT

# > 默认向 8.8.8.8 查询 apple.com，可使用 proxy-test-udp 参数修改，如 proxy-test-udp = google.com@1.1.1.1
proxy-test-udp = apple.com@8.8.8.8

# > 隐藏状态栏上的 VPN 图标
hide-vpn-icon = false

[Proxy]
🧩 国内直连 = direct
⛔️ 拦截净化 = reject

[Proxy Group]
# url-test 策略组
# timeout 默认 5s
# interval 默认 86400s（24 小时）
# tolerance 默认 100ms
# 补充：验证后，timeout\interval\tolerance 为 0，和没有设置是一样的，采用默认值。
#
# 一、timeout 测试的最长等待时间，默认 5s
# 超过该时间的策略，将标记为失败不再继续等待。
# 二、update-interval 更新时间，默认 60*60*24=86400 秒（24 小时）
# 什么时候触发，Surge 官方的解释，如下。
# （1）首次使用时进行测试。
# （2）后续使用该策略组时，如果上次测试的时间间隔已大于 interval 设置时间，则再次触发测试。
# （3）当目前选中策略产生不可恢复性错误时，直接触发测试。
# （4）网络切换后，将清理之前的测试结果，当策略组被使用时触发首次测试。
# 三、tolerance 容忍度，默认 100 ms
# 1、当新一次的测试结果中，“最佳策略比原选中策略的延迟差大于容忍度时”，才会切换至新的策略。
# 2、一般情况下，tolerance 默认，除非很烂的机场，否则超级难触发。
# 3、如果 tolerance 太小，频繁切换策略，可能会触发目标网站的风险控制。
# 四、evaluate-before-use 默认情况下，在首次使用策略组时将直接使用子策略中的第一个策略，同时触发延迟测试。
# 1、如果配置了 evaluate-before-use=true，那么首次使用时将等待测试完毕后选择最佳策略。
# 2、再具体点，就是：当策略组测试未完成时，将会堵塞住对应请求，等待测试完毕后使用测试结果再继续。
#
# 五、smart group 自动从该策略组的子策略中选择合适的策略。
# 1、smart 最关键的解释：
# （1）smart 策略组的目标是取代原有的自动测试组（url/load-balance/fallback）
# （2）大幅优化体验的同时，尽可能减少用户需要手动干预策略组的情况，用户只需将可用策略放入该组即可。
# 2、本人使用后总结
# （1）smart 用过一段时间后，会分为：最常使用、经常使用、偶尔使用。
# （2）当前正在使用的策略（最常使用），不一定是延迟最低，如果这个策略一直拉胯，后面会被降下去。
# （3）smart 和 url-test 最大的区别
# 当前正在使用的节点故障时，url-test 会重新测试那个策略组，可能会花费数十秒，期间的请求会中断。
# 而 smart，会直接使用备选策略，也就是排名靠前的策略，期间的请求不会中断，用户无感。
# 所以，总体而言，smart 比 url-test 要更优秀。
# smart 还算比较 samrt，提升空间很大，期待后面的优化吧。
#

# > 一个机场
机场1 = select, update-interval=86400, policy-path=您的订阅链接, hidden=true
订阅链接 = select, include-other-group="机场1", hidden=true
# > 多个机场
; 机场1 = select, update-interval=86400, policy-path=您的订阅链接, hidden=true
; 机场2 = select, update-interval=86400, policy-path=您的订阅链接, hidden=true
; 订阅链接 = select, include-other-group="机场1,机场2", hidden=true

台湾节点 = select, update-interval=0, include-other-group=订阅链接, policy-regex-filter=(台湾|TW|TWN|Taiwan), hidden=false
日本节点 = select, update-interval=0, include-other-group=订阅链接, policy-regex-filter=(日本|JP|JPN|Japan), hidden=false
🌍 冷门节点 = select, update-interval=0, include-other-group=订阅链接, policy-regex-filter=^(?!.*(距离|重置|过期|到期|剩余|GB|Traffic|Expire|香港|HK|HKG|Hong Kong|台湾|TW|TWN|Taiwan|日本|JP|JPN|Japan|美国|\bUS(A)?|United States|新加坡|狮城|SG|SGP|Singapore)), hidden=false
香港节点 = select, update-interval=0, include-other-group=订阅链接, policy-regex-filter=(香港|HK|HKG|Hong Kong), hidden=false
狮城节点 = select, update-interval=0, include-other-group=订阅链接, policy-regex-filter=(新加坡|狮城|SG|SGP|Singapore), hidden=false
美国节点 = select, update-interval=0, include-other-group=订阅链接, policy-regex-filter=(美国|\bUS(A)?|United States), hidden=false

🚀️ 法外狂徒 = select, 香港节点, 日本节点, 狮城节点, 美国节点, 台湾节点, 🌍 冷门节点

苹果服务 = select, 🧩 国内直连, 🚀️ 法外狂徒
微软服务 = select, 🧩 国内直连, 🚀️ 法外狂徒

电报代理 = select, 🚀️ 法外狂徒, 狮城节点, 日本节点
国际媒体 = select, 狮城节点, 台湾节点, 🚀️ 法外狂徒

美国专场 = select, 美国节点, 🚀️ 法外狂徒
台湾专场 = select, 台湾节点, 🚀️ 法外狂徒

哔哩哔哩 = select, 🧩 国内直连, 台湾节点
游戏玩家 = select, 🧩 国内直连, 🚀️ 法外狂徒
黑白名单 = select, 🚀️ 法外狂徒, 🧩 国内直连

Means Nothing = select, 🚀️ 法外狂徒
; Means Nothing 123 = select, 🚀️ 法外狂徒

[Rule]
DEST-PORT,123,🧩 国内直连
# > 局域网地址
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Lan/Lan.list, 🧩 国内直连
# > 我的规则
RULE-SET, https://raw.githubusercontent.com/wmsxwdsh/ClashSub/main/customRule/AddDirect.list, 🧩 国内直连
# > 其他直连
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Logitech/Logitech.list, 🧩 国内直连
# > ⛔️ 拦截净化
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Adobe/Adobe.list, ⛔️ 拦截净化
# > 苹果服务
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple.list, 苹果服务
# > 微软服务
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.list, 微软服务
# > 电报代理
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list, 电报代理
# > 国际媒体：Netflix、DisneyPlus
RULE-SET, https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Netflix.list, 国际媒体
RULE-SET, https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/DisneyPlus.list, 国际媒体
# > 美国专场：OpenAI、TikTok
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.list, 美国专场
RULE-SET, https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/TikTok.list, 美国专场
# > 台湾专场：Bahamut、HBOAsia、LineTV
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bahamut/Bahamut.list, 台湾专场
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBOAsia/HBOAsia.list, 台湾专场
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/LineTV/LineTV.list, 台湾专场
# > 🚀️ 法外狂徒：Wikipedia、YouTube、Google、GitHub、Jetbrains、TVB、Shopee、ProxyLite（最后）
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Wikipedia/Wikipedia.list, 🚀️ 法外狂徒
RULE-SET, https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/YouTube.list, 🚀️ 法外狂徒
RULE-SET, https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Google.list, 🚀️ 法外狂徒
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.list, 🚀️ 法外狂徒
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Jetbrains/Jetbrains.list, 🚀️ 法外狂徒
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Surge/TVB/TVB.list, 🚀️ 法外狂徒
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Shopee/Shopee.list, 🚀️ 法外狂徒
# > 哔哩哔哩
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BiliBili/BiliBili.list, 🧩 国内直连
# > 游戏玩家：Steam
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Steam/Steam.list, 🧩 国内直连
# > 最后
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Proxy/Proxy_Resolve.list, 🚀️ 法外狂徒
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/China/China_Resolve.list, 🧩 国内直连
# GeoIP China
GEOIP,CN,🧩 国内直连
# 兜底规则
FINAL,黑白名单,dns-failed


[Host]
mtalk.google.com = 108.177.125.188
dl.google.com = server:119.29.29.29
dl.l.google.com = server:119.29.29.29
update.googleapis.com = server:119.29.29.29
*.dl.playstation.net = server:119.29.29.29

[Header Rewrite]

[URL Rewrite]
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com header

[Script]

[SSID Setting]

[MITM]
skip-server-cert-verify = true
hostname = www.google.cn